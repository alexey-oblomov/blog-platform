{"version":3,"sources":["redux/reducers/rootReducer.js","redux/actions/actionCreators.js","redux/actions/actionTypes.js","utils/utils.js","components/article/preview.jsx","components/personalArea/personalArea.jsx","components/home/home.jsx","components/inputPassword/inputPassword.jsx","components/signup/signup.jsx","components/login/login.jsx","components/article/article.jsx","components/add/add.jsx","components/edit/edit.jsx","components/navbar/navbar.jsx","App.js","index.js"],"names":["initialState","articles","currentArticle","title","author","username","body","favorited","favoritesCount","articlesCount","articlesLoaded","type","currentArticleLoaded","makeHeadersForAuth","token","localStorage","getItem","Authorization","Preview","state","getArticleFromServer","slug","props","headers","axios","get","then","response","setState","article","data","setLike","a","post","setUnlike","delete","toggleLike","this","tagList","createdAt","linkPath","PreviewDiv","differenceInMinutes","Date","className","onClick","to","Component","connect","styled","div","dispatch","email","style","minHeight","border","borderRadius","boxShadow","padding","minWidth","margin","marginRight","clear","Home","getListArticles","openArticle","event","target","history","push","handleChangePagination","numberSkipArticles","currentTarget","textContent","countPaginationBtns","Math","floor","listArticles","map","item","key","marginTop","display","marginBottom","maxWidth","flexWrap","Pagination","count","variant","shape","onChange","CustomizedInputPassword","errors","touched","values","name","onBlur","label","labelWidth","required","React","useState","showPassword","setValues","FormControl","size","error","InputLabel","htmlFor","OutlinedInput","id","value","endAdornment","InputAdornment","position","IconButton","edge","Signup","StyledButton","withStyles","root","height","alignSelf","backgroundColor","color","marginLeft","Button","handleSubmit","reqData","user","password","setItem","catch","console","log","initialValues","onSubmit","handleChange","handleBlur","dirty","isValid","inputNameProps","as","component","TextField","Boolean","width","inputEmailProps","passwordProps","WrapperDiv","HeadingDiv","H1","InputDiv","disabled","LoginLinkSpan","h1","span","Login","SignupLinkSpan","Article","match","params","linkToEdit","Add","description","newArticle","inputTitleProps","inputBodyProps","multiline","rows","inputDescriptionProps","inputTagsProps","Edit","updArticle","put","Navbar","AppBar","Toolbar","aria-label","keepMounted","onClose","MenuItem","Typography","App","exact","path","enhancer","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","store","createStore","action","app","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e2ffea0.chunk.js","sourcesContent":["import { ARTICLES_LOADED, CURRENT_ARTICLE_LOADED } from '../actions/actionTypes';\r\n\r\nconst initialState = {\r\n  articles: [],\r\n  currentArticle: {\r\n    title: null,\r\n    author: { username: null },\r\n    body: null,\r\n    favorited: null,\r\n    favoritesCount: null,\r\n  },\r\n  articlesCount: 0,\r\n};\r\n\r\nexport default function rootReducer(state = initialState, action) {\r\n  const { type, articles, articlesCount, currentArticle } = action;\r\n  switch (type) {\r\n    case ARTICLES_LOADED:\r\n      return {\r\n        articles,\r\n        articlesCount,\r\n        currentArticle,\r\n      };\r\n    case CURRENT_ARTICLE_LOADED:\r\n      return {\r\n        articles,\r\n        articlesCount,\r\n        currentArticle,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ARTICLES_LOADED, CURRENT_ARTICLE_LOADED, CURRENT_ARTICLE_PREVIEW_LOADED } from './actionTypes';\r\n\r\nexport const articlesLoaded = (articles, articlesCount) => {\r\n  return {\r\n    type: ARTICLES_LOADED,\r\n    articles,\r\n    articlesCount,\r\n  };\r\n};\r\n\r\nexport const currentArticleLoaded = (currentArticle) => {\r\n  return {\r\n    type: CURRENT_ARTICLE_LOADED,\r\n    currentArticle,\r\n  };\r\n};\r\n\r\n// export const currentArticlePreviewLoaded = (currentArticle) => {\r\n//   return {\r\n//     type: CURRENT_ARTICLE_PREVIEW_LOADED,\r\n//     currentArticle,\r\n//   };\r\n// };","export const ARTICLES_LOADED = 'ARTICLES_LOADED';\r\nexport const CURRENT_ARTICLE_LOADED = 'CURRENT_ARTICLE_LOADED';\r\nexport const CURRENT_ARTICLE_PREVIEW_LOADED = 'CURRENT_ARTICLE_PREVIEW_LOADED';\r\n","export const makeHeadersForAuth = () => {\r\n    const token = localStorage.getItem('token');\r\n    return {\r\n      Authorization: `Token ${token}`,\r\n    };\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport axios from 'axios';\r\nimport { makeHeadersForAuth } from '../../utils/utils';\r\nimport { differenceInMinutes } from 'date-fns';\r\nimport { Link } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nclass Preview extends Component {\r\n  state = {};\r\n\r\n  getArticleFromServer = () => {\r\n    const { slug } = this.props;\r\n    const headers = makeHeadersForAuth();\r\n    axios\r\n      .get(`https://conduit.productionready.io/api/articles/${slug}`, { headers })\r\n      .then((response) => {\r\n        this.setState({\r\n          article: response.data.article,\r\n        });\r\n      });\r\n  };\r\n\r\n  setLike = async (slug) => {\r\n    const headers = makeHeadersForAuth();\r\n    await axios\r\n      .post(`https://conduit.productionready.io/api/articles/${slug}/favorite`, null, { headers })\r\n      .then((response) => {\r\n        this.setState({\r\n          article: response.data.article,\r\n        });\r\n      });\r\n  };\r\n\r\n  setUnlike = async (slug) => {\r\n    const headers = makeHeadersForAuth();\r\n    await axios\r\n      .delete(`https://conduit.productionready.io/api/articles/${slug}/favorite`, {\r\n        headers,\r\n      })\r\n      .then((response) => {\r\n        this.setState({\r\n          article: response.data.article,\r\n        });\r\n      });\r\n  };\r\n\r\n  toggleLike = (slug, favorited) => {\r\n    if (!favorited) {\r\n      this.setLike(slug);\r\n    } else {\r\n      this.setUnlike(slug);\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getArticleFromServer();\r\n  }\r\n\r\n  render() {\r\n    const { slug } = this.props;\r\n\r\n    const { article = { author: { username: null } } } = this.state;\r\n    const { title, author, tagList, favorited, favoritesCount, createdAt } = article;\r\n    const linkPath = `/blog-platform/articles/${slug}`;\r\n    return (\r\n      <PreviewDiv>\r\n        <div>Заголовок: {title}</div>\r\n        <div>Автор: {author.username}</div>\r\n        <div>Создано: {differenceInMinutes(new Date(), new Date(createdAt))} минут назад</div>\r\n        <div>Список тегов: {tagList}</div>\r\n        <div>Количество лайков: {favoritesCount}</div>\r\n        <div>\r\n          <button className=\"buttonLike\" onClick={() => this.toggleLike(slug, favorited)}>\r\n            {favorited ? 'Снять' : 'Поставить'} лайк\r\n          </button>\r\n        </div>\r\n        <Link to={linkPath}>читать дальше</Link>\r\n      </PreviewDiv>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    articles: state.articles,\r\n  };\r\n}\r\n\r\nexport default connect(mapStateToProps)(Preview);\r\n\r\nconst PreviewDiv = styled.div`\r\n  border: 1px solid gray;\r\n  border-radius: 10px;\r\n  box-shadow: 0 0 6px 0 #34495e;\r\n  padding: 12px;\r\n  cursor: pointer;\r\n  width: 300px;\r\n  margin: 5px;\r\n  transition: 0.1s;\r\n  &:hover {\r\n    transform: scale(1.03);\r\n  }\r\n`;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { articlesLoaded } from '../../redux/actions/actionCreators';\r\nimport axios from 'axios';\r\nimport { makeHeadersForAuth } from '../../utils/utils';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction PersonalArea(props) {\r\n  const username = localStorage.getItem('username');\r\n  const email = localStorage.getItem('email');\r\n  const logout = () => localStorage.clear();\r\n  const getMyArticles = () => {\r\n    const headers = makeHeadersForAuth();\r\n    const { articlesLoaded } = props;\r\n    axios\r\n      .get(`https://conduit.productionready.io/api/articles?limit=10&author=${username}`, {\r\n        headers,\r\n      })\r\n      .then((response) => {\r\n        const { articles } = response.data;\r\n        articlesLoaded(articles);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div\r\n      style={{\r\n        minHeight: '800px',\r\n        border: '1px solid gray',\r\n        borderRadius: '10px',\r\n        boxShadow: '0 0 6px 0 #34495e',\r\n        padding: '12px',\r\n        minWidth: '300px',\r\n        margin: '5px',\r\n        marginRight: '15px',\r\n      }}\r\n    >\r\n      <div>Личный кабинет</div>\r\n      \r\n      <br />\r\n      Пользователь {username}\r\n      <br />\r\n      {email}\r\n      <div>\r\n        <Link to=\"/blog-platform/\" onClick={getMyArticles}>\r\n          Показать все мои статьи\r\n        </Link>\r\n      </div>\r\n      <div>\r\n        <Link to=\"/blog-platform/add\">Добавить статью</Link>\r\n      </div>\r\n      <div>\r\n        <Link to=\"/blog-platform/login\" onClick={logout}>\r\n          выход\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    articlesLoaded: (articles) => dispatch(articlesLoaded(articles)),\r\n  };\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(PersonalArea);\r\n","import React, { Component } from 'react';\n\nimport axios from 'axios';\n// import { uniqueId } from 'lodash';\n\nimport { connect } from 'react-redux';\n\nimport { articlesLoaded } from '../../redux/actions/actionCreators';\n\nimport { makeHeadersForAuth } from '../../utils/utils';\nimport Preview from '../article/preview.jsx';\n\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\n\nimport PersonalArea from '../personalArea/personalArea.jsx';\nclass Home extends Component {\n  state = {};\n\n  getListArticles = () => {\n    const headers = makeHeadersForAuth();\n    axios\n      .get('https://conduit.productionready.io/api/articles?limit=10', { headers })\n      .then((response) => {\n        const { articles, articlesCount } = response.data;\n        this.props.articlesLoaded(articles, articlesCount);\n      });\n  };\n\n  openArticle = (event, slug) => {\n    if (event.target.className !== 'buttonLike') {\n      this.props.history.push(`/blog-platform/articles/${slug}`);\n    }\n  };\n\n  handleChangePagination = (event) => {\n    const pageNumber = event.currentTarget.textContent;\n    const numberSkipArticles = pageNumber * 10;\n    const headers = makeHeadersForAuth();\n    axios\n      .get(\n        `https://conduit.productionready.io/api/articles?limit=10&offset=${numberSkipArticles}`,\n        { headers }\n      )\n      .then((response) => {\n        const { articles, articlesCount } = response.data;\n        this.props.articlesLoaded(articles, articlesCount);\n      });\n  };\n\n  componentDidMount() {\n    this.getListArticles();\n  }\n\n  render() {\n    const { history, articles = [], articlesCount = 0 } = this.props;\n    const countPaginationBtns = Math.floor(articlesCount / 10);\n    const username = localStorage.getItem('username');\n    if (!username) {\n      history.push('/blog-platform/login');\n    }\n\n    const listArticles = articles.map((item) => {\n      const { slug, favorited } = item;\n      return (\n        <div key={slug} onClick={(event) => this.openArticle(event, slug)}>\n          <Preview slug={slug} favorited={favorited} />\n        </div>\n      );\n    });\n\n    return (\n      <>\n        <div style={{ marginTop: '15px' }}>\n          <div style={{ display: 'flex', marginBottom: '15px' }}>\n            <PersonalArea />\n\n            <div\n              style={{\n                display: 'flex',\n                maxWidth: '1600px',\n                flexWrap: 'wrap',\n              }}\n            >\n              {listArticles}\n            </div>\n          </div>\n          <div>\n            <Pagination\n              count={countPaginationBtns}\n              variant=\"outlined\"\n              shape=\"rounded\"\n              onChange={this.handleChangePagination}\n            />\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    articles: state.articles,\n    articlesCount: state.articlesCount,\n  };\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    articlesLoaded: (articles, articlesCount) => dispatch(articlesLoaded(articles, articlesCount)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","/* eslint-disable react/prop-types */\nimport React from 'react';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\nimport {InputAdornment, IconButton} from '@material-ui/core';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\n\nexport default function CustomizedInputPassword(props) {\n  const {errors, touched, values, name, onChange, onBlur, label, labelWidth, required} = props;\n\n  const [state, setValues] = React.useState({\n    showPassword: false,\n  });\n\n  const handleClickShowPassword = () => {\n    setValues({\n      showPassword: !state.showPassword,\n    });\n  };\n\n  return (\n    <FormControl size=\"small\" variant=\"outlined\" error={!!touched[name] && !!errors[name]}>\n      <InputLabel htmlFor=\"outlined-adornment-password\" required={required}>\n        {label}\n      </InputLabel>\n      <OutlinedInput\n        id=\"outlined-adornment-password\"\n        size=\"small\"\n        type={state.showPassword ? 'text' : 'password'}\n        value={values[name]}\n        name={name}\n        onChange={onChange}\n        onBlur={onBlur}\n        endAdornment={\n          <InputAdornment position=\"end\">\n            <IconButton onClick={handleClickShowPassword} edge=\"end\">\n              {state.showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        }\n        labelWidth={labelWidth}\n      />\n    </FormControl>\n  );\n}\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\n\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form, Field } from \"formik\";\nimport { Button } from \"@material-ui/core\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nimport CustomizedInputPassword from \"../inputPassword/inputPassword\";\n\nexport function Signup(props) {\n  const { history } = props;\n  const username = localStorage.getItem(\"username\");\n  if (username) {\n    history.push(\"/blog-platform\");\n  }\n\n  const initialValues = {\n    name: \"\",\n    password: \"\",\n    email: \"\",\n  };\n\n  const StyledButton = withStyles({\n    root: {\n      height: \"28px\",\n      alignSelf: \"center\",\n      backgroundColor: \"#1a73e8\",\n      color: \"white\",\n      marginLeft: \"0\",\n    },\n  })(Button);\n\n  const handleSubmit = async (values) => {\n    const reqData = {\n      user: {\n        username: values.name,\n        email: values.email,\n        password: values.password,\n      },\n    };\n\n    await axios\n      .post(\"https://conduit.productionready.io/api/users\", reqData)\n      .then((response) => {\n        localStorage.setItem(\"username\", response.data.user.username);\n        history.push(\"/blog-platform\");\n      })\n      .catch((error) => {\n        console.log(error.response.data.errors);\n      });\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        errors,\n        touched,\n        dirty,\n        isValid,\n      }) => {\n        const inputNameProps = {\n          size: \"small\",\n          name: \"name\",\n          as: \"input\",\n          component: TextField,\n          label: \"Имя\",\n          variant: \"outlined\",\n          error: touched.name && Boolean(errors.name),\n          value: values.name,\n          onChange: handleChange(\"name\"),\n          onBlur: handleBlur(\"name\"),\n          required: true,\n          width: 225,\n        };\n\n        const inputEmailProps = {\n          size: \"small\",\n          name: \"email\",\n          as: \"input\",\n          component: TextField,\n          label: \"Электронная почта\",\n          variant: \"outlined\",\n          onChange: handleChange(\"email\"),\n          error: touched.email && Boolean(errors.email),\n          onBlur: handleBlur(\"email\"),\n          required: true,\n        };\n        const passwordProps = {\n          name: \"password\",\n          errors,\n          values,\n          touched,\n          onChange: handleChange(\"password\"),\n          onBlur: handleBlur(\"password\"),\n          label: \"Пароль\",\n          labelWidth: 65,\n          required: true,\n        };\n\n        return (\n          <Form>\n            <WrapperDiv>\n              <HeadingDiv>\n                <H1>Регистрация</H1>\n              </HeadingDiv>\n\n              <InputDiv>\n                <Field {...inputNameProps} />\n                {touched.name ? errors.name : \"\"}\n              </InputDiv>\n\n              <InputDiv>\n                <Field {...inputEmailProps} />\n                {touched.email ? errors.email : \"\"}\n              </InputDiv>\n\n              <InputDiv>\n                <CustomizedInputPassword {...passwordProps} />\n                {touched.password ? errors.password : \"\"}\n              </InputDiv>\n\n              <StyledButton\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                disabled={!dirty || !isValid}\n                type=\"submit\"\n              >\n                Зарегистрироваться\n              </StyledButton>\n\n              <LoginLinkSpan>\n                <Link to=\"/blog-platform/login\">Войти</Link>\n              </LoginLinkSpan>\n            </WrapperDiv>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n}\n\nconst WrapperDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst HeadingDiv = styled.div`\n  margin-bottom: 20px;\n  padding-top: 0;\n`;\nconst H1 = styled.h1`\n  margin: 0;\n`;\n\nconst InputDiv = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst LoginLinkSpan = styled.span`\n  display: block;\n  padding-top: 20px;\n`;","import React from 'react';\nimport styled from 'styled-components';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nimport { Formik, Form, Field } from 'formik';\nimport { Button } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport CustomizedInputPassword from '../inputPassword/inputPassword';\n\nexport function Login(props) {\n  const { history } = props;\n  const username = localStorage.getItem('username');\n  if (username) {\n    history.push('/blog-platform');\n  }\n\n  const initialValues = {\n    name: '',\n    password: '',\n    email: '',\n  };\n\n  const StyledButton = withStyles({\n    root: {\n      height: '28px',\n      alignSelf: 'center',\n      backgroundColor: '#1a73e8',\n      color: 'white',\n      marginLeft: '0',\n    },\n  })(Button);\n\n  const handleSubmit = async (values) => {\n    const reqData = {\n      user: {\n        email: values.email,\n        password: values.password,\n      },\n    };\n    const response = await axios.post(\n      'https://conduit.productionready.io/api/users/login',\n      reqData\n    );\n    const { username, email, token } = response.data.user;\n\n    await localStorage.setItem('username', username);\n    localStorage.setItem('email', email);\n    await localStorage.setItem('token', token);\n\n    history.push('/blog-platform');\n    response.then((response) => {\n      console.log(response);\n    });\n  };\n\n  return (\n    <Formik initialValues={initialValues} onSubmit={handleSubmit}>\n      {({ values, handleChange, handleBlur, errors, touched, dirty, isValid }) => {\n        const inputEmailProps = {\n          size: 'small',\n          name: 'email',\n          as: 'input',\n          component: TextField,\n          label: 'Электронная почта',\n          variant: 'outlined',\n          onChange: handleChange('email'),\n          error: touched.email && Boolean(errors.email),\n          onBlur: handleBlur('email'),\n        };\n\n        const passwordProps = {\n          name: 'password',\n          errors,\n          values,\n          touched,\n          onChange: handleChange('password'),\n          onBlur: handleBlur('password'),\n          label: 'Пароль',\n          labelWidth: 65,\n          required: false,\n        };\n\n        return (\n          <Form>\n            <WrapperDiv>\n              <HeadingDiv>\n                <H1>Авторизация</H1>\n              </HeadingDiv>\n\n              <InputDiv>\n                <Field {...inputEmailProps} />\n                {touched.email ? errors.email : ''}\n              </InputDiv>\n\n              <InputDiv>\n                <CustomizedInputPassword {...passwordProps} />\n                {touched.password ? errors.password : ''}\n              </InputDiv>\n\n              <StyledButton\n                variant=\"contained\"\n                size=\"small\"\n                color=\"primary\"\n                disabled={!dirty || !isValid}\n                type=\"submit\"\n              >\n                Войти\n              </StyledButton>\n            </WrapperDiv>\n            <SignupLinkSpan>\n              <Link to=\"/blog-platform/signup\">Регистрация</Link>\n            </SignupLinkSpan>\n          </Form>\n        );\n      }}\n    </Formik>\n  );\n}\n\nconst WrapperDiv = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst HeadingDiv = styled.div`\n  margin-bottom: 20px;\n  padding-top: 0;\n`;\nconst H1 = styled.h1`\n  margin: 0;\n`;\n\nconst InputDiv = styled.div`\n  margin-bottom: 20px;\n`;\n\nconst SignupLinkSpan = styled.span`\n  display: block;\n  padding-top: 20px;\n`;\n\n// const SignupLink = styled.a`\n//   :visited {\n//     color: black;\n//   }\n//   :hover {\n//     color: blue;\n//   }\n// `;\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { currentArticleLoaded } from '../../redux/actions/actionCreators';\r\nimport { makeHeadersForAuth } from '../../utils/utils';\r\n\r\nclass Article extends Component {\r\n  getArticleFromServer = () => {\r\n    const { slug } = this.props.match.params;\r\n    const headers = makeHeadersForAuth();\r\n    axios\r\n      .get(`https://conduit.productionready.io/api/articles/${slug}`, { headers })\r\n      .then((response) => {\r\n        this.props.currentArticleLoaded(response.data.article);\r\n      });\r\n  };\r\n\r\n  setLike = async () => {\r\n    const { slug } = this.props.match.params;\r\n    const headers = makeHeadersForAuth();\r\n    await axios\r\n      .post(`https://conduit.productionready.io/api/articles/${slug}/favorite`, null, { headers })\r\n      .then((response) => {\r\n        this.props.currentArticleLoaded(response.data.article);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getArticleFromServer();\r\n  }\r\n\r\n  setUnlike = async () => {\r\n    const { slug } = this.props.match.params;\r\n    const headers = makeHeadersForAuth();\r\n    await axios\r\n      .delete(`https://conduit.productionready.io/api/articles/${slug}/favorite`, {\r\n        headers,\r\n      })\r\n      .then((response) => {\r\n        this.props.currentArticleLoaded(response.data.article);\r\n      });\r\n  };\r\n\r\n  toggleLike = () => {\r\n    const { currentArticle } = this.props;\r\n    const { favorited } = currentArticle;\r\n    if (!favorited) {\r\n      this.setLike();\r\n    } else {\r\n      this.setUnlike();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { slug } = this.props.match.params;\r\n    const { currentArticle = { author: { username: null } } } = this.props;\r\n    const linkToEdit = `/blog-platform/articles/${slug}/edit`;\r\n    const { title, author, body, favorited, favoritesCount } = currentArticle;\r\n    return (\r\n      <>\r\n        <Link to=\"/blog-platform\">На главную</Link>\r\n        <br />\r\n        <Link to={linkToEdit}>Редактировать</Link>\r\n        <div>\r\n          <br />\r\n          <br />\r\n          <h3>title: {title}</h3>\r\n          <span>author: {author.username}</span>\r\n          <br />\r\n          <br />\r\n          <span>body: {body}</span>\r\n          <br />\r\n          <br />\r\n          <span>slug: {slug}</span>\r\n          <br />\r\n          <br />\r\n          <span>Всего лайков: {favoritesCount}</span>\r\n          <br />\r\n          <br />\r\n          <span>\r\n            <button onClick={this.toggleLike}>{favorited ? 'Снять' : 'Поставить'} лайк</button>\r\n          </span>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentArticle: state.currentArticle,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    currentArticleLoaded: (currentArticle) => dispatch(currentArticleLoaded(currentArticle)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Article);\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { makeHeadersForAuth } from '../../utils/utils';\r\n\r\nexport function Add(props) {\r\n  const initialValues = {\r\n    title: '',\r\n    description: '',\r\n    body: '',\r\n    tagList: '',\r\n  };\r\n\r\n  const StyledButton = withStyles({\r\n    root: {\r\n      height: '28px',\r\n      alignSelf: 'center',\r\n      backgroundColor: '#1a73e8',\r\n      color: 'white',\r\n      marginLeft: '0',\r\n    },\r\n  })(Button);\r\n\r\n  const handleSubmit = async (values) => {\r\n    const headers = makeHeadersForAuth();\r\n    const { title, description, body, tagList } = values;\r\n    const newArticle = {\r\n      article: {\r\n        title: title,\r\n        description: description,\r\n        body: body,\r\n        tagList: [tagList],\r\n      },\r\n    };\r\n    await axios\r\n      .post('https://conduit.productionready.io/api/articles', newArticle, {\r\n        headers,\r\n      })\r\n      .then((response) => console.log('response.data ', response.data));\r\n    props.history.push('/blog-platform/');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to=\"/blog-platform\">На главную</Link>\r\n      <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n        {({ values, handleChange, handleBlur, errors, touched, dirty, isValid }) => {\r\n          const inputTitleProps = {\r\n            size: 'small',\r\n            name: 'title',\r\n            as: 'input',\r\n            component: TextField,\r\n            label: 'Название статьи',\r\n            variant: 'outlined',\r\n            error: touched.title && Boolean(errors.title),\r\n            value: values.title,\r\n            onChange: handleChange('title'),\r\n            onBlur: handleBlur('title'),\r\n            width: 225,\r\n          };\r\n\r\n          const inputBodyProps = {\r\n            size: 'small',\r\n            name: 'body',\r\n            as: 'input',\r\n            component: TextField,\r\n            label: 'Текст статьи',\r\n            variant: 'outlined',\r\n            error: touched.body && Boolean(errors.body),\r\n            value: values.body,\r\n            onChange: handleChange('body'),\r\n            onBlur: handleBlur('body'),\r\n            multiline: true,\r\n            rows: '10',\r\n            // defaultValue: 'Введите текст статьи',\r\n            width: '225',\r\n          };\r\n\r\n          const inputDescriptionProps = {\r\n            size: 'small',\r\n            name: 'description',\r\n            as: 'input',\r\n            component: TextField,\r\n            label: 'Краткое описание',\r\n            variant: 'outlined',\r\n            error: touched.description && Boolean(errors.description),\r\n            value: values.description,\r\n            onChange: handleChange('description'),\r\n            onBlur: handleBlur('description'),\r\n            width: '225',\r\n          };\r\n\r\n          const inputTagsProps = {\r\n            size: 'small',\r\n            name: 'tagList',\r\n            as: 'input',\r\n            component: TextField,\r\n            label: 'Теги',\r\n            variant: 'outlined',\r\n            error: touched.tagList && Boolean(errors.tagList),\r\n            value: values.tagList,\r\n            onChange: handleChange('tagList'),\r\n            onBlur: handleBlur('tagList'),\r\n            width: '225',\r\n          };\r\n\r\n          return (\r\n            <Form>\r\n              <InputDiv>\r\n                <Field {...inputTitleProps} />\r\n                {touched.title ? errors.title : ''}\r\n              </InputDiv>\r\n\r\n              <InputDiv>\r\n                <Field {...inputDescriptionProps} />\r\n                {touched.name ? errors.name : ''}\r\n              </InputDiv>\r\n\r\n              <InputDiv>\r\n                <Field {...inputTagsProps} />\r\n                {touched.name ? errors.name : ''}\r\n              </InputDiv>\r\n\r\n              {/* <InputDiv>\r\n                <TextField {...inputBodyProps} />\r\n                {touched.name ? errors.name : ''}\r\n              </InputDiv> */}\r\n\r\n              <InputDiv>\r\n                <Field {...inputBodyProps} />\r\n                {touched.name ? errors.name : ''}\r\n              </InputDiv>\r\n\r\n              <StyledButton\r\n                variant=\"contained\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                disabled={!dirty || !isValid}\r\n                type=\"submit\"\r\n              >\r\n                Добавить статью\r\n              </StyledButton>\r\n            </Form>\r\n          );\r\n        }}\r\n      </Formik>\r\n    </>\r\n  );\r\n}\r\n\r\nconst InputDiv = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n","import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { Formik, Form, Field } from 'formik';\r\nimport { Button } from '@material-ui/core';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { makeHeadersForAuth } from '../../utils/utils';\r\n\r\nimport { currentArticleLoaded } from '../../redux/actions/actionCreators';\r\n\r\nclass Edit extends Component {\r\n  getArticleFromServer = () => {\r\n    const { slug } = this.props.match.params;\r\n    axios.get(`https://conduit.productionready.io/api/articles/${slug}`).then((response) => {\r\n      this.props.currentArticleLoaded(response.data.article);\r\n    });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getArticleFromServer();\r\n  }\r\n\r\n  render() {\r\n    const { slug } = this.props.match.params;\r\n    const { currentArticle = { author: { username: null } } } = this.props;\r\n    const { title, description, body, tagList } = currentArticle;\r\n\r\n    const initialValues = {\r\n      title,\r\n      description,\r\n      body,\r\n      tagList,\r\n    };\r\n\r\n    const StyledButton = withStyles({\r\n      root: {\r\n        height: '28px',\r\n        alignSelf: 'center',\r\n        backgroundColor: '#1a73e8',\r\n        color: 'white',\r\n        marginLeft: '0',\r\n      },\r\n    })(Button);\r\n\r\n    const handleSubmit = async (values) => {\r\n      const headers = makeHeadersForAuth();\r\n      const { title, description, body, tagList } = values;\r\n      const updArticle = {\r\n        article: {\r\n          title: title,\r\n          description: description,\r\n          body: body,\r\n          tagList: [tagList],\r\n        },\r\n      };\r\n      await axios\r\n        .put(`https://conduit.productionready.io/api/articles/${slug}`, updArticle, {\r\n          headers,\r\n        })\r\n        .then(() => this.props.history.push('/blog-platform/'));\r\n    };\r\n\r\n    return (\r\n      <>\r\n        <Link to=\"/blog-platform\">На главную</Link>\r\n        <br />\r\n        <Formik initialValues={initialValues} onSubmit={handleSubmit}>\r\n          {({ values, handleChange, handleBlur, errors, touched, dirty, isValid }) => {\r\n            const inputTitleProps = {\r\n              size: 'small',\r\n              name: 'title',\r\n              as: 'input',\r\n              component: TextField,\r\n              label: 'Название статьи',\r\n              variant: 'outlined',\r\n              error: touched.title && Boolean(errors.title),\r\n              value: values.title,\r\n              onChange: handleChange('title'),\r\n              onBlur: handleBlur('title'),\r\n              width: 225,\r\n            };\r\n\r\n            const inputBodyProps = {\r\n              size: 'small',\r\n              name: 'body',\r\n              as: 'input',\r\n              component: TextField,\r\n              label: 'Текст статьи',\r\n              variant: 'outlined',\r\n              error: touched.body && Boolean(errors.body),\r\n              value: values.body,\r\n              onChange: handleChange('body'),\r\n              onBlur: handleBlur('body'),\r\n              multiline: true,\r\n              rows: '10',\r\n              width: '225',\r\n            };\r\n\r\n            const inputDescriptionProps = {\r\n              size: 'small',\r\n              name: 'description',\r\n              as: 'input',\r\n              component: TextField,\r\n              label: 'Краткое описание',\r\n              variant: 'outlined',\r\n              error: touched.description && Boolean(errors.description),\r\n              value: values.description,\r\n              onChange: handleChange('description'),\r\n              onBlur: handleBlur('description'),\r\n              width: '225',\r\n            };\r\n\r\n            const inputTagsProps = {\r\n              size: 'small',\r\n              name: 'tagList',\r\n              as: 'input',\r\n              component: TextField,\r\n              label: 'Теги',\r\n              variant: 'outlined',\r\n              error: touched.tagList && Boolean(errors.tagList),\r\n              value: values.tagList,\r\n              onChange: handleChange('tagList'),\r\n              onBlur: handleBlur('tagList'),\r\n              width: '225',\r\n            };\r\n\r\n            return (\r\n              <Form>\r\n                <InputDiv>\r\n                  <Field {...inputTitleProps} />\r\n                  {touched.title ? errors.title : ''}\r\n                </InputDiv>\r\n\r\n                <InputDiv>\r\n                  <Field {...inputDescriptionProps} />\r\n                  {touched.name ? errors.name : ''}\r\n                </InputDiv>\r\n\r\n                <InputDiv>\r\n                  <Field {...inputTagsProps} />\r\n                  {touched.name ? errors.name : ''}\r\n                </InputDiv>\r\n\r\n                <InputDiv>\r\n                  <Field {...inputBodyProps} />\r\n                  {touched.name ? errors.name : ''}\r\n                </InputDiv>\r\n\r\n                <StyledButton\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  color=\"primary\"\r\n                  disabled={!dirty || !isValid}\r\n                  type=\"submit\"\r\n                >\r\n                  Редактировать\r\n                </StyledButton>\r\n              </Form>\r\n            );\r\n          }}\r\n        </Formik>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst InputDiv = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    currentArticle: state.currentArticle,\r\n  };\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    currentArticleLoaded: (currentArticle) => dispatch(currentArticleLoaded(currentArticle)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Edit);\r\n","import React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Menu from '@material-ui/core/Menu';\r\n\r\nexport function Navbar() {\r\n  const username = localStorage.getItem('username');\r\n\r\n  return (\r\n    <div className=\"test\">\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={() => {}}\r\n          >\r\n            <MenuIcon />\r\n\r\n            <Menu\r\n              id=\"simple-menu\"\r\n            //   anchorEl={state.anchorEl}\r\n              keepMounted\r\n            //   open={Boolean(state.anchorEl)}\r\n              onClose={() => {}}\r\n            >\r\n              <MenuItem onClick={() => {}}>Profile</MenuItem>\r\n              <MenuItem onClick={() => {}}>My account</MenuItem>\r\n              <MenuItem onClick={() => {}}>Logout</MenuItem>\r\n            </Menu>\r\n          </IconButton>\r\n          <Typography variant=\"h6\">{username}</Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\nimport './App.css';\n\nimport { Route, Switch } from 'react-router-dom';\nimport Home from './components/home/home.jsx';\nimport { Signup } from './components/signup/signup.jsx';\nimport { Login } from './components/login/login.jsx';\nimport Article from './components/article/article.jsx';\nimport { Add } from './components/add/add.jsx';\nimport Edit from './components/edit/edit.jsx';\nimport { Navbar } from './components/navbar/navbar.jsx';\n\nfunction App(props) {\n  return (\n    <div className=\"app\">\n      <Navbar />\n      {/* <Switch> */}\n        <Route exact path=\"/blog-platform\" component={Home} />\n        <Route path=\"/blog-platform/signup\" component={Signup} />\n        <Route path=\"/blog-platform/login\" component={Login} />\n        <Route exact path=\"/blog-platform/articles/:slug\" component={Article} />\n        <Route path=\"/blog-platform/add\" component={Add} />\n        <Route path=\"/blog-platform/articles/:slug/edit\" component={Edit} />\n      {/* </Switch> */}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { Provider } from 'react-redux';\n// import reduxThunk from 'redux-thunk';\n\nimport rootReducer from './redux/reducers/rootReducer';\nimport App from './App';\n\nconst composeEnhancers =\n  typeof window === 'object' && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\n    ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\n        // Specify extension’s options like name, actionsBlacklist, actionsCreators, serialize...\n      })\n    : compose;\n\nconst enhancer = composeEnhancers(applyMiddleware());\n\nconst store = createStore(rootReducer, enhancer);\n\nconst app = (\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n);\n\nReactDOM.render(app, document.getElementById('root'));\n"],"sourceRoot":""}